name: MAIN deployment

on:
  workflow_dispatch:

  push:
    branches:
      - main
    paths:
      - 'lambda/**'
      - 'internal/**'
      - '.github/workflows/ci-main.yml'
      - 'tf/main/**'

concurrency: main_environment
permissions:
  id-token: write
  contents: read
jobs:
  run:
    name: Run
    env:
      AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION_MAIN_DEVELOPMENT }}
    runs-on: ${{ matrix.operating-system }}
    strategy:
      matrix:
        operating-system: [ubuntu-latest]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
#      - name: configure aws credentials
#        uses: aws-actions/configure-aws-credentials@v1.6.1
#        with:
#          role-to-assume: ${{ secrets.AWS_DEPLOY_ROLE_TO_ASSUME_MAIN }}
#          role-session-name: githubactionssession
#          aws-region: ${{ secrets.AWS_DEFAULT_REGION_MAIN_DEVELOPMENT }}
      - name: use golang
        uses: actions/setup-go@v2
        with:
          go-version: '^1.17.2'
      - name: Configure git for private modules
        env:
          TOKEN: ${{ secrets.GIT_CLONE_TOKEN }}
        run: |
          git config --global url."https://${TOKEN}@github.com".insteadOf "https://github.com"
      - name: run vet
        run: |
          go vet ./...
      - name: run test
        run: |
          go test ./... -v
      - name: run statick check
        run: |
          go install honnef.co/go/tools/cmd/staticcheck@latest
          staticcheck -checks "all,-ST1000" ./...
      - name: Build artefact
        env:
          CGO_ENABLED: 0
          GOOS: "linux"
          GOARCH: "arm64"
        run: |
          cd lambda
          mkdir -p ../src
          go build -o ../src/bootstrap
#      - name: use terraform
#        uses: hashicorp/setup-terraform@v1
#      - name: initialisation
#        run: |
#          cd tf/main
#          terraform init
#      - name: plan
#        run: |
#          cd tf/main
#          terraform plan -no-color -var-file main.tfvars -out=out.tfplan
#          terraform output
#      - name: apply
#        run: |
#          cd tf/main
#          terraform apply "out.tfplan"